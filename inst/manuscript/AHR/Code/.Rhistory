ID <- ID[ID$Gene.stable.ID.version %in% STAR$V1,]
STAR[,2:4]
STAR[,2:4] > 0
sum(STAR[,2:4] > 0) > 0
STAR[sum(STAR[,2:4] > 0) > 0,]
STAR <- STAR[sum(STAR[,2:4] > 0) > 0,]
View(STAR)
sum(STAR[,2:4] > 0)
STAR <- read.table('~/../Desktop/ReadsPerGene.out.tab', sep = '\t', skip = 4, stringsAsFactors = FALSE)
ID <- read.table('~/../Downloads/mart_export.txt', sep = '\t', stringsAsFactors = FALSE, header = TRUE)
rownames(ID) <- make.unique(ID$V2)
STAR <- STAR[sum(STAR[,2:4] != 0) > 0,]
View(STAR)
STAR[,2:4] != 0
STAR <- STAR[rowSums(STAR[,2:4] != 0) > 0,]
STAR <- read.table('~/../Desktop/ReadsPerGene.out.tab', sep = '\t', skip = 4, stringsAsFactors = FALSE)
ID <- read.table('~/../Downloads/mart_export.txt', sep = '\t', stringsAsFactors = FALSE, header = TRUE)
rownames(ID) <- make.unique(ID$V2)
ID <- ID[ID$Gene.stable.ID.version %in% STAR$V1,]
STAR <- STAR[rowSums(STAR[,2:4] != 0) > 0,]
STAR <- read.table('~/../Desktop/ReadsPerGene.out.tab', sep = '\t', skip = 4, stringsAsFactors = FALSE)
ID <- read.table('~/../Downloads/mart_export.txt', sep = '\t', stringsAsFactors = FALSE, header = TRUE)
ID <- ID[ID$Gene.stable.ID.version %in% STAR$V1,]
STAR <- STAR[rowSums(STAR[,2:4] != 0) > 0,]
View(STAR)
STAR$V1
i == 1
i = 1
STAR$V1[i]
ID$Gene.stable.ID.version %in% STAR$V1[i]
ID$Gene.name[ID$Gene.stable.ID.version %in% STAR$V1[i]]
for(i in seq_len(nrow(STAR))){
STAR$V1[i] <- ID$Gene.name[ID$Gene.stable.ID.version %in% STAR$V1[i]]
}
View(STAR)
STAR <- read.table('~/../Desktop/ReadsPerGene.out.tab', sep = '\t', skip = 4, stringsAsFactors = FALSE)
ID <- read.table('~/../Downloads/mart_export.txt', sep = '\t', stringsAsFactors = FALSE, header = TRUE)
ID <- ID[ID$Gene.stable.ID.version %in% STAR$V1,]
STAR <- STAR[rowSums(STAR[,2:4] != 0) > 0,]
for(i in seq_len(nrow(STAR))){
STAR$V1[i] <- ID$Gene.name[ID$Gene.stable.ID.version %in% STAR$V1[i]]
}
View(STAR)
ID <- readLines('~/../Downloads/qExample.txt.filepart')
ID <- readLines('~/../Downloads/qExample.txt')
ID <- cbind(table(ID))
View(ID)
strsplit(rownames(ID)[1], "|")
strsplit(rownames(ID)[1], "\\|")
gID <- lapply(rownames(ID), function(X){unlist(strsplit(X, "\\|"))[6]})
unlist(gID)
rownames(ID) <- unlist(gID)
View(gID)
ID <- readLines('~/../Downloads/qExample.txt')
ID <- cbind(table(ID))
gID <- lapply(rownames(ID), function(X){unlist(strsplit(X, "\\|"))[6]})
rownames(ID) <- unlist(gID)
View(ID)
colSums(ID)
FASTA <- readLines('~/../Downloads/gencode.vM25.transcripts.fa.gz', n = 10)
FASTA[1:2]
grepl('^>', FASTA)
FASTA[grepl('^>', FASTA)]
FASTA[grepl('^>', FASTA)]
FASTA <- readLines('~/../Downloads/gencode.vM25.transcripts.fa.gz', n = 10)
FASTA[grepl('^>', FASTA)]
header <- FASTA[grepl('^>', FASTA)]
strsplit(header, '\\|')
unlist(strsplit(header, '\\|'))[c(1,6)]
paste0(unlist(strsplit(header, '\\|'))[c(1,6)], collapse = '_')
header <- paste0(unlist(strsplit(header, '\\|'))[c(1,6)], collapse = '_')
FASTA[grepl('^>', FASTA)] <- header
FASTA
FASTA <- readLines('~/../Downloads/gencode.vM25.transcripts.fa.gz', n = 100)
header <- FASTA[grepl('^>', FASTA)]
header
header <- paste0(unlist(strsplit(header, '\\|'))[c(1,6)], collapse = '_')
FASTA[grepl('^>', FASTA)] <- header
header <- FASTA[grepl('^>', FASTA)]
header
load("C:/Users/dcosorioh/Downloads/PEG10_4.RData")
load("C:/Users/dcosorioh/Downloads/PEG10_5.RData")
PEG10$diffRegulation$p.adj < 0.05
PEG10$diffRegulation$gene[PEG10$diffRegulation$p.adj < 0.05]
writeLines(PEG10$diffRegulation$gene[PEG10$diffRegulation$p.adj < 0.05])
writeLines(PEG10$diffRegulation$gene[PEG10$diffRegulation$p.adj < 1])
writeLines(PEG10$diffRegulation$gene[PEG10$diffRegulation$p.adj < 0.01], text = '~/../Downloads/E.txt')
writeLines(PEG10$diffRegulation$gene[PEG10$diffRegulation$p.adj < 0.01], con =  = '~/../Downloads/E.txt')
writeLines(PEG10$diffRegulation$gene[PEG10$diffRegulation$p.adj < 0.01], con = '~/../Downloads/E.txt')
writeLines(PEG10$diffRegulation$gene[PEG10$diffRegulation$p.adj < 0.1], con = '~/../Downloads/E.txt')
writeLines(PEG10$diffRegulation$gene[PEG10$diffRegulation$p.adj =< 0.1], con = '~/../Downloads/E.txt')
writeLines(PEG10$diffRegulation$gene[PEG10$diffRegulation$p.adj <= 0.1], con = '~/../Downloads/E.txt')
PEG10$diffRegulation
DR <- PEG10$diffRegulation
View(DR)
load("C:/Users/dcosorioh/Downloads/PNMA2_4.RData")
DR <- PNMA2_2$diffRegulation
View(DR)
DR$gene[DR$p.adj < 0.05]
writeLines(DR$gene[DR$p.adj < 0.05])
load("C:/Users/dcosorioh/Downloads/SCC6_2.RData")
O$diffRegulation
DR <- O$diffRegulation
View(DR)
O$diffRegulation$gene[O$diffRegulation$p.adj < 0.05]
writeLines(O$diffRegulation$gene[O$diffRegulation$p.adj < 0.05])
writeLines(O$diffRegulation$gene[O$diffRegulation$p.adj < 0.1])
writeLines(O$diffRegulation$gene[O$diffRegulation$p.value < 0.05])
writeLines(O$diffRegulation$gene[O$diffRegulation$p.adj < 0.05])
writeLines(O$diffRegulation$gene[O$diffRegulation$p.adj < 0.1])
writeLines(O$diffRegulation$gene[O$diffRegulation$p.adj < 0.05])
load("C:/Users/dcosorioh/Downloads/SCC1_2.RData")
writeLines(O$diffRegulation$gene[O$diffRegulation$p.adj < 0.05])
load("C:/Users/dcosorioh/Downloads/SCC25_2.RData")
writeLines(O$diffRegulation$gene[O$diffRegulation$p.adj < 0.05])
L <- c('EIF4A2;PPP1R15A;ERRFI1;HSP90AB1;PDCD6;TXN;BACH1;CLDN1;MYC;COTL1;PIM1;ABL2;SEC61B;SLC38A2;CTNNAL1;CDV3;TPM4;HSPA5;TNFRSF12A;ITGA3;SH2D3A;LIF;PAWR;HSPE1;ELL2;F3;KLF3;EREG;FOSL2;FOSL1;PTP4A1;CLDN4;GPRC5A;STK17A;POLR1D;SNRPE;HDGF;HBEGF;AVPI1',
'EIF4A2;PPP1R15A;ERRFI1;HSP90AB1;PDCD6;TXN;BACH1;CLDN1;MYC;COTL1;PIM1;ABL2;SEC61B;SLC38A2;CTNNAL1;CDV3;TPM4;HSPA5;TNFRSF12A;ITGA3;SH2D3A;LIF;PAWR;HSPE1;ELL2;F3;KLF3;EREG;FOSL2;FOSL1;PTP4A1;CLDN4;GPRC5A;STK17A;POLR1D;SNRPE;HDGF;HBEGF;AVPI1')
L <- unlist(strsplit(L,';'))
L <- unique(L)
writeLines(L, sep = ', ')
library(readxl)
D <- read_excel('~/../Downloads/pnas.1906663116.sd01.xlsx')
View(D)
D$`T-test p-value` < 0.05
D <- D[D$`T-test p-value` < 0.05,]
D <- read_excel('~/../Downloads/pnas.1906663116.sd01.xlsx')
D <- D[complete.cases(D),]
D <- D[D$`T-test p-value` < 0.05,]
D$gene_short_name[D$`Average Log2 foldchange (FPKM +1)` > 0]
length(D$gene_short_name[D$`Average Log2 foldchange (FPKM +1)` > 0])
length(D$gene_short_name[D$`Average Log2 foldchange (FPKM +1)` < 0])
library(igraph)
g <- make_full_graph(5) %du% make_full_graph(5) %du% make_full_graph(5)
g <- add_edges(g, c(1,6, 1,11, 6, 11))
plot(g)
plot(g)
g <- make_full_graph(5) %du% make_full_graph(25) %du% make_full_graph(50)
g <- add_edges(g, c(1,6, 1,11, 6, 11))
plot(g)
g <- make_full_graph(5) %du% make_full_graph(5) %du% make_full_graph(5)
g <- add_edges(g, c(1,6, 1,11, 6, 11))
plot(g)
16+2
16+25
g <- make_full_graph(5) %du% make_full_graph(10) %du% make_full_graph(25)
g <- add_edges(g, c(1,6, 1,16, 6, 41))
plot(g)
g <- make_full_graph(5) %du% make_full_graph(10) %du% make_full_graph(25)
g <- add_edges(g, c(1,6))
plot(g)
g <- make_full_graph(5) %du% make_full_graph(10) %du% make_full_graph(25)
g <- add_edges(g, c(1,6, 1, 39))
plot(g)
g <- add_edges(g, c(1,6, 1, 39, 6, 38))
plot(g)
g <- make_full_graph(5) %du% make_full_graph(10) %du% make_full_graph(25)
g <- add_edges(g, c(1,6, 1, 39, 6, 38, 14, 32))
plot(g)
g <- make_full_graph(5) %du% make_full_graph(5) %du% make_full_graph(5)
g <- add_edges(g, c(1,6, 1,11, 6, 11))
plot(g)
g <- make_full_graph(5) %du% make_full_graph(6) %du% make_full_graph(5)
g <- add_edges(g, c(1,6, 1,11, 6, 11))
plot(g)
g <- make_full_graph(5) %du% make_full_graph(6) %du% make_full_graph(5)
g <- add_edges(g, c(1,6, 1,11, 6, 12))
plot(g)
g <- make_full_graph(5) %du% make_full_graph(6) %du% make_full_graph(5)
g <- add_edges(g, c(1,6, 1,11, 6, 12))
plot(g)
g <- make_full_graph(5) %du% make_full_graph(6) %du% make_full_graph(5)
g <- add_edges(g, c(1,6, 1,11, 6, 12))
plot(g)
g <- make_full_graph(5) %du% make_full_graph(6) %du% make_full_graph(5)
g <- add_edges(g, c(1,6, 1,11, 6, 12))
plot(g)
g <- make_full_graph(5) %du% make_full_graph(6) %du% make_full_graph(10)
g <- add_edges(g, c(1,6, 1,11, 6, 12))
plot(g)
g <- make_full_graph(5) %du% make_full_graph(6) %du% make_full_graph(10)
g <- add_edges(g, c(1,6, 1,11, 6, 12))
plot(g)
g <- make_full_graph(5) %du% make_full_graph(6) %du% make_full_graph(10)
g <- add_edges(g, c(1,6, 1,11, 6, 12))
plot(g)
g <- make_full_graph(5) %du% make_full_graph(6) %du% make_full_graph(10)
g <- add_edges(g, c(1,6, 1,11, 6, 12))
plot(g)
g <- make_full_graph(5) %du% make_full_graph(6) %du% make_full_graph(10)
g <- add_edges(g, c(1,6, 1,11, 6, 12))
plot(g)
g <- make_full_graph(5) %du% make_full_graph(6) %du% make_full_graph(10)
g <- add_edges(g, c(1,6, 1,11, 6, 12))
plot(g)
g <- make_full_graph(5) %du% make_full_graph(6) %du% make_full_graph(10)
g <- add_edges(g, c(1,6, 1,11, 6, 12))
plot(g)
g <- make_full_graph(5) %du% make_full_graph(6) %du% make_full_graph(10)
g <- add_edges(g, c(1,6, 1,11, 6, 12))
plot(g)
g <- make_full_graph(5) %du% make_full_graph(6) %du% make_full_graph(10)
g <- add_edges(g, c(1,6, 1,11, 6, 12))
plot(g)
g <- make_full_graph(5) %du% make_full_graph(6) %du% make_full_graph(10)
g <- add_edges(g, c(1,6, 1,11, 6, 12))
plot(g)
g <- make_full_graph(5) %du% make_full_graph(6) %du% make_full_graph(5)
g <- add_edges(g, c(1,6, 1,11, 6, 12))
plot(g)
g <- make_full_graph(5) %du% make_full_graph(6) %du% make_full_graph(5)
g <- add_edges(g, c(1,6, 1,11, 6, 12))
plot(g)
g <- make_full_graph(5) %du% make_full_graph(6) %du% make_full_graph(5)
g <- add_edges(g, c(1,6, 1,11, 6, 12))
plot(g)
1.7e-1
9.8e-2
library(Matrix)
library(scTenifoldNet)
nGenes <- c(seq(100,7000,100))
nGenes <- seq(100,7000,100)
nCells <- seq(500,10000, 500)
sapply(nGenes, function(genes){
sapply(nCells, function(cells){
cbind(genes, cells)
})
})
sapply(nGenes, function(genes){
sapply(nCells, function(cells){
data.frame(genes, cells)
})
})
lapply(nGenes, function(genes){
sapply(nCells, function(cells){
data.frame(genes, cells)
})
})
lapply(nGenes, function(genes){
t(sapply(nCells, function(cells){
data.frame(genes, cells)
}))
})
o <- lapply(nGenes, function(genes){
t(sapply(nCells, function(cells){
data.frame(genes, cells)
}))
})
do.call(rbind.data.frame, o)
o <- do.call(rbind.data.frame, o)
View(o)
genes <- 100
cells <- 500
rnbinom(genes * cells, size = 10, prob = 0.9)
rnbinom(genes * cells, size = 10, prob = 0.9) != 0
mean(rnbinom(genes * cells, size = 10, prob = 0.9) != 0)
mean(rnbinom(genes * cells, size = 10, prob = 0.99) != 0)
mean(rnbinom(genes * cells, size = 10, prob = 0.95) != 0)
mean(rnbinom(genes * cells, size = 10, prob = 0.95))
mean(rnbinom(genes * cells, size = 10, prob = 0.95))
mean(rnbinom(genes * cells, size = 10, prob = 0.95))
mean(rnbinom(genes * cells, size = 10, prob = 0.99))
mean(rnbinom(genes * cells, size = 10, prob = 0.99))
mean(rnbinom(genes * cells, size = 10, prob = 0.99))
mean(rnbinom(genes * cells, size = 10, prob = 0.95))
mean(rnbinom(genes * cells, size = 6, prob = 0.95))
mean(rnbinom(genes * cells, size = 6, prob = 0.95))
mean(rnbinom(genes * cells, size = 6, prob = 0.95))
mean(rnbinom(genes * cells, size = 6, prob = 0.95))
mean(rnbinom(genes * cells, size = 6, prob = 0.95)!=0)
mean(rnbinom(genes * cells, size = 6, prob = 0.95)!=0)
mean(rnbinom(genes * cells, size = 10, prob = 0.95)!=0)
mean(rnbinom(genes * cells, size = 10, prob = 0.95)!=0)
mean(rnbinom(genes * cells, size = 10, prob = 0.95)!=0)
mean(rnbinom(genes * cells, size = 10, prob = 0.95)!=0)
rnbinom(genes * cells, size = 10, prob = 0.95)
nbData <- rnbinom(genes * cells, size = 10, prob = 0.95)
matrix(nbData, nrow = genes, ncol = cells)
X <- matrix(nbData, nrow = genes, ncol = cells)
X <- Matrix(matrix(nbData, nrow = genes, ncol = cells))
rownames(X) <- paste('g',seq_len(genes))
colnames(X) <- paste('c',seq_len(cells))
Y <- X
system.time(scTenifoldNet(X,Y))
system.time(scTenifoldNet(X,Y, qc_minLibSize = 0))
timeO <- system.time(scTenifoldNet(X,Y, qc_minLibSize = 0))
timeO
timeO[[3]]
data.frame(genes, cells, timeO[[3]])
data.frame(nGenes = genes, nCells = cells, eTime = timeO[[3]])
o <- lapply(nGenes[1], function(genes){
t(sapply(nCells, function(cells){
nbData <- rnbinom(genes * cells, size = 10, prob = 0.95)
X <- Matrix(matrix(nbData, nrow = genes, ncol = cells))
rownames(X) <- paste('g',seq_len(genes))
colnames(X) <- paste('c',seq_len(cells))
Y <- X
timeO <- system.time(scTenifoldNet(X,Y, qc_minLibSize = 0))
data.frame(nGenes = genes, nCells = cells, eTime = timeO[[3]])
}))
})
nGenes <- seq(100,7000,500)
nGenes <- seq(0,7000,500)
nGenes <- seq(0,7000,500)[-1]
nGenes <- seq(0,7000,500)[-1]
nCells <- seq(500,10000, 500)
o <- lapply(nGenes[1], function(genes){
t(sapply(nCells, function(cells){
nbData <- rnbinom(genes * cells, size = 10, prob = 0.95)
X <- Matrix(matrix(nbData, nrow = genes, ncol = cells))
rownames(X) <- paste('g',seq_len(genes))
colnames(X) <- paste('c',seq_len(cells))
Y <- X
timeO <- system.time(scTenifoldNet(X,Y, qc_minLibSize = 0))
data.frame(nGenes = genes, nCells = cells, eTime = timeO[[3]])
}))
})
library(scTenifoldNet)
nCells = 2000
nGenes = 100
set.seed(1)
X <- rnbinom(n = nGenes * nCells, size = 20, prob = 0.98)
X <- round(X)
X <- matrix(X, ncol = nCells)
rownames(X) <- c(paste0('ng', 1:90), paste0('mt-', 1:10))
Y <- X
Y[10,] <- Y[50,]
Y[2,] <- Y[11,]
Y[3,] <- Y[5,]
outputH0 <- scTenifoldNet(X = X, Y = X,
nc_nNet = 10, nc_nCells = 500,
td_K = 3, qc_minLibSize = 30)
outputHA <- scTenifoldNet(X = X, Y = Y,
nc_nNet = 10, nc_nCells = 500,
td_K = 3, qc_minLibSize = 30)
str(outputH0)
outputH0$tensorNetworks$X
igraph::graph_from_adjacency_matrix(outputH0$tensorNetworks$X)
igraph::graph_from_adjacency_matrix(outputH0$tensorNetworks$X,weighted = TRUE)
igraph::graph_from_adjacency_matrix(outputH0$tensorNetworks$Y,weighted = TRUE)
class(outputH0$tensorNetworks$X)
A <- igraph::graph_from_adjacency_matrix(outputH0$tensorNetworks$Y,weighted = TRUE)
library(igraph)
hub.score(A)
hub.score(A)$vector
plot(hub.score(A)$vector)
A <- igraph::graph_from_adjacency_matrix(outputHA$tensorNetworks$Y,weighted = TRUE)
B <- igraph::graph_from_adjacency_matrix(outputHA$tensorNetworks$Y,weighted = TRUE)
plot(hub.score(A)$vector)
plot(hub.score(A)$vector, hub.score(B)$vector)
A <- igraph::graph_from_adjacency_matrix(outputHA$tensorNetworks$X,weighted = TRUE)
B <- igraph::graph_from_adjacency_matrix(outputHA$tensorNetworks$Y,weighted = TRUE)
plot(hub.score(A)$vector, hub.score(B)$vector)
A <- igraph::graph_from_adjacency_matrix(outputH0$tensorNetworks$X,weighted = TRUE)
B <- igraph::graph_from_adjacency_matrix(outputH0$tensorNetworks$Y,weighted = TRUE)
plot(hub.score(A)$vector, hub.score(B)$vector)
head(outputH0$manifoldAlignment)
outputH0$manifoldAlignment[c('X_ng1', 'Y_ng1'),]
outputH0$manifoldAlignment[c('X_ng1', 'y_ng1'),]
distance(outputH0$manifoldAlignment[c('X_ng1', 'y_ng1'),])
dist(outputH0$manifoldAlignment[c('X_ng1', 'y_ng1'),])
outputH0$manifoldAlignment[c('X_ng59', 'y_ng59'),]
dist(outputH0$manifoldAlignment[c('X_ng59', 'y_ng59'),])
171.88/60
(171.88%/%60)
(171.88%60)
0.86*60
171.29/60
.854833*60
round(.854833*60,1)
175.29/60
.9215 * 60
188.88/60
.148*60
189.51/60
.1585*60
615.45/60
.2575*60
616.12/60
.26867*60
library(scTenifoldNet)
nCells = 2000
nGenes = 100
set.seed(1)
X <- rnbinom(n = nGenes * nCells, size = 20, prob = 0.98)
X <- round(X)
X <- matrix(X, ncol = nCells)
rownames(X) <- c(paste0('ng', 1:90), paste0('mt-', 1:10))
Y <- X
Y[10,] <- Y[50,]
Y[2,] <- Y[11,]
Y[3,] <- Y[5,]
outputH0 <- scTenifoldNet(X = X, Y = X,
nc_nNet = 10, nc_nCells = 500,
td_K = 3, qc_minLibSize = 30)
outputHA <- scTenifoldNet(X = X, Y = Y,
nc_nNet = 10, nc_nCells = 500,
td_K = 3, qc_minLibSize = 30)
par(mfrow=c(1,2), mar=c(3,3,1,1), mgp=c(1.5,0.5,0))
set.seed(1)
qChisq <- rchisq(100,1)
geneColor <- rev(ifelse(outputH0$diffRegulation$p.adj < 0.1, 10,1))
qqplot(qChisq, outputH0$diffRegulation$FC, pch = 16, main = 'H0', col = geneColor,
xlab = expression(X^2~Quantiles), ylab = 'FC', xlim=c(0,8), ylim=c(0,13))
qqline(qChisq)
legend('bottomright', legend = c('FDR < 0.1'), pch = 16, col = 'red', bty='n', cex = 0.7)
geneColor <- rev(ifelse(outputHA$diffRegulation$p.adj < 0.1, 'red', 'black'))
qqplot(qChisq, outputHA$diffRegulation$FC, pch = 16, main = 'HA', col = geneColor,
xlab = expression(X^2~Quantiles), ylab = 'FC', xlim=c(0,8), ylim=c(0,13))
qqline(qChisq)
legend('bottomright', legend = c('FDR < 0.1'), pch = 16, col = 'red', bty='n', cex = 0.7)
par(mfrow=c(2,1), mar=c(3,3,1,1), mgp=c(1.5,0.5,0))
set.seed(1)
qChisq <- rchisq(100,1)
geneColor <- rev(ifelse(outputH0$diffRegulation$p.adj < 0.1, 10,1))
qqplot(qChisq, outputH0$diffRegulation$FC, pch = 16, main = 'H0', col = geneColor,
xlab = expression(X^2~Quantiles), ylab = 'FC', xlim=c(0,8), ylim=c(0,13))
qqline(qChisq)
legend('bottomright', legend = c('FDR < 0.1'), pch = 16, col = 'red', bty='n', cex = 0.7)
geneColor <- rev(ifelse(outputHA$diffRegulation$p.adj < 0.1, 'red', 'black'))
qqplot(qChisq, outputHA$diffRegulation$FC, pch = 16, main = 'HA', col = geneColor,
xlab = expression(X^2~Quantiles), ylab = 'FC', xlim=c(0,8), ylim=c(0,13))
qqline(qChisq)
legend('bottomright', legend = c('FDR < 0.1'), pch = 16, col = 'red', bty='n', cex = 0.7)
png('Fig2C.png', width = 500, height = 1000, res = 300)
par(mfrow=c(2,1), mar=c(3,3,1,1), mgp=c(1.5,0.5,0))
set.seed(1)
qChisq <- rchisq(100,1)
geneColor <- rev(ifelse(outputH0$diffRegulation$p.adj < 0.1, 10,1))
qqplot(qChisq, outputH0$diffRegulation$FC, pch = 16, main = 'H0', col = geneColor,
xlab = expression(X^2~Quantiles), ylab = 'FC', xlim=c(0,8), ylim=c(0,13))
qqline(qChisq)
legend('bottomright', legend = c('FDR < 0.1'), pch = 16, col = 'red', bty='n', cex = 0.7)
geneColor <- rev(ifelse(outputHA$diffRegulation$p.adj < 0.1, 'red', 'black'))
qqplot(qChisq, outputHA$diffRegulation$FC, pch = 16, main = 'HA', col = geneColor,
xlab = expression(X^2~Quantiles), ylab = 'FC', xlim=c(0,8), ylim=c(0,13))
qqline(qChisq)
legend('bottomright', legend = c('FDR < 0.1'), pch = 16, col = 'red', bty='n', cex = 0.7)
dev.off()
png('Fig2C.png', width = 1000, height = 2000, res = 300)
par(mfrow=c(2,1), mar=c(3,3,1,1), mgp=c(1.5,0.5,0))
set.seed(1)
qChisq <- rchisq(100,1)
geneColor <- rev(ifelse(outputH0$diffRegulation$p.adj < 0.1, 10,1))
qqplot(qChisq, outputH0$diffRegulation$FC, pch = 16, main = 'H0', col = geneColor,
xlab = expression(X^2~Quantiles), ylab = 'FC', xlim=c(0,8), ylim=c(0,13))
qqline(qChisq)
legend('bottomright', legend = c('FDR < 0.1'), pch = 16, col = 'red', bty='n', cex = 0.7)
geneColor <- rev(ifelse(outputHA$diffRegulation$p.adj < 0.1, 'red', 'black'))
qqplot(qChisq, outputHA$diffRegulation$FC, pch = 16, main = 'HA', col = geneColor,
xlab = expression(X^2~Quantiles), ylab = 'FC', xlim=c(0,8), ylim=c(0,13))
qqline(qChisq)
legend('bottomright', legend = c('FDR < 0.1'), pch = 16, col = 'red', bty='n', cex = 0.7)
dev.off()
rnorm(20)
rnorm(25)
matrix(rnorm(25),5)
A = matrix(rnorm(25),5)
aA = matrix(rnorm(25),5)
aA <-  matrix(rnorm(25),5)
sA <-
sA <- (aA + t(aA))/2
eigen(aA)
dA <- eigen(aA)
dA$vectors %*% dA$values
dA$values %*% dA$vectors
dA$values %*% diag(dA$vectors)
diag(dA$vectors)
diag(dA$vectors)
dA$vectors
diag(dA$values)
diag(dA$values) %*% dA$vectors
aA
dA$vectors %*% diag(dA$values)
aA
dA$vectors %*% diag(dA$values) %*% solve(dA$vectors)
dA <- eigen(aA)
dA$vectors
apply(dA$vectors,2,as.numeric)
dA <- apply(dA$vectors,2,as.numeric)
dA$vectors %*% diag(dA$values) %*% solve(dA$vectors)
dA <- eigen(aA)
dA$vectors <- apply(dA$vectors,2,as.numeric)
dA$vectors %*% diag(dA$values) %*% solve(dA$vectors)
solve(dA$vectors)
solve(dA$vectors)
solve(dA$vectors)
solve(dA$vectors)
solve(dA$vectors)
dA$vectors %*% diag(dA$values) %*% (dA$vectors)^-1
dA$vectors %*% diag(dA$values) %*% (dA$vectors)^-1
dA$vectors %*% diag(dA$values) %*% (dA$vectors)^-1
dA$vectors %*% diag(dA$values) %*% solve(dA$vectors)
dA$vectors
library(MASS)
dA$vectors %*% diag(dA$values) %*% ginv(dA$vectors)
dA <- dA$vectors %*% diag(dA$values) %*% ginv(dA$vectors)
aA
aA - dA
dA
aA - dA
setwd("~/scTenifoldKnk/inst/manuscript/AHR/Code")
load('../Results/Preenterocytes.RData')
Original <- O
load('../Results/KNKF.RData')
New <- O
oZ <- Original$diffRegulation$Z
names(oZ) <- Original$diffRegulation$gene
nZ <- New$diffRegulation$Z
names(nZ) <- New$diffRegulation$gene
intersect(names(oZ), names(nZ))
sGenes <- intersect(names(oZ), names(nZ))
plot(oZ[sGenes], nZ[sGenes])
