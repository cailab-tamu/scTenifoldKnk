sm <- scQC(sm, mtThreshold = 1)
mtCounts <- colSums(sm[grep('^MT-',toupper(rownames(sm))),])
mtCounts <- mtCounts/colSums(sm)
plot(mtCounts)
plot(colSums(sm),mtCounts)
plot(colSums(sm),colSums(sm!=0))
sm <- CreateSeuratObject(sm)
sm <- NormalizeData(sm)
sm <- ScaleData(sm)
sm <- FindVariableFeatures(sm)
set.seed(seed)
sm <- RunPCA(sm)
# set.seed(seed)
# sm <- RunTSNE(sm)
# set.seed(seed)
# sm <- RunUMAP(sm, dims = 1:20)
# UMAPPlot(sm)
# sm$MT <- mtCounts
# FeaturePlot(sm, features = 'MT', order = TRUE)
set.seed(seed)
sm <- FindNeighbors(sm)
set.seed(seed)
sm <- FindClusters(sm, resolution = 0.1)
# UMAPPlot(sm)
DE <- FindMarkers(sm, ident.1 = '1', ident.2 = '0', logfc.threshold = 0, test.use = 'MAST')
FC <- DE$avg_logFC
names(FC) <-  toupper(unlist(lapply(strsplit(rownames(DE), '-ENSM'), function(X){X[1]})))
DE$gene <- names(FC)
# set.seed(1)
# E2 <- fgseaMultilevel(REACTOME, FC)
set.seed(1)
E1 <- fgseaMultilevel(KEGG, FC)
E1$padj[E1$pathway == 'Apoptosis']
# set.seed(1)
# E3 <- fgseaMultilevel(BIOP, FC)
})
pA
plot(DE$avg_logFC, -log10(DE$p_val))
library(Seurat)
library(fgsea)
KEGG <- gmtPathways('https://amp.pharm.mssm.edu/Enrichr/geneSetLibrary?mode=text&libraryName=KEGG_2019_Mouse')
REACTOME <- gmtPathways('https://amp.pharm.mssm.edu/Enrichr/geneSetLibrary?mode=text&libraryName=Reactome_2016')
BIOP <- gmtPathways('https://amp.pharm.mssm.edu/Enrichr/geneSetLibrary?mode=text&libraryName=BioPlanet_2019')
source('https://raw.githubusercontent.com/dosorio/utilities/master/singleCell/scQC.R')
load('SRA745734_SRS3600975.sparse.RData')
dim(sm)
sm <- scQC(sm, mtThreshold = 1)
mtCounts <- colSums(sm[grep('^MT-',toupper(rownames(sm))),])
mtCounts <- mtCounts/colSums(sm)
plot(mtCounts)
plot(colSums(sm),mtCounts)
plot(colSums(sm),colSums(sm!=0))
sm <- CreateSeuratObject(sm)
sm <- NormalizeData(sm)
sm <- ScaleData(sm)
sm <- FindVariableFeatures(sm)
sm <- RunPCA(sm)
sm <- RunTSNE(sm)
sm <- RunUMAP(sm, dims = 1:20)
UMAPPlot(sm)
sm$MT <- mtCounts
FeaturePlot(sm, features = 'MT', order = TRUE)
sm <- FindNeighbors(sm)
sm <- FindClusters(sm, resolution = 0.1)
UMAPPlot(sm)
DE <- FindMarkers(sm, ident.1 = '1', ident.2 = '0', logfc.threshold = 0, test.use = 'MAST')
FC <- DE$avg_logFC
names(FC) <-  toupper(unlist(lapply(strsplit(rownames(DE), '-ENSM'), function(X){X[1]})))
DE$gene <- names(FC)
set.seed(seed)
seed <- 1
set.seed(seed)
E1 <- fgseaMultilevel(KEGG, FC)
View(E1)
E1$padj[E1$pathway == 'Apoptosis']
pA <- sapply(1:10, function(seed){
set.seed(seed)
E1 <- fgseaMultilevel(KEGG, FC)
E1$padj[E1$pathway == 'Apoptosis']
})
pA
min(pA)
pA <- pbapply::pbsapply(1:100, function(seed){
set.seed(seed)
E1 <- fgseaMultilevel(KEGG, FC)
E1$padj[E1$pathway == 'Apoptosis']
})
pA
pA < 0.05
any(pA < 0.05)
min(pA)
library(Seurat)
library(fgsea)
KEGG <- gmtPathways('https://amp.pharm.mssm.edu/Enrichr/geneSetLibrary?mode=text&libraryName=KEGG_2019_Mouse')
REACTOME <- gmtPathways('https://amp.pharm.mssm.edu/Enrichr/geneSetLibrary?mode=text&libraryName=Reactome_2016')
BIOP <- gmtPathways('https://amp.pharm.mssm.edu/Enrichr/geneSetLibrary?mode=text&libraryName=BioPlanet_2019')
source('https://raw.githubusercontent.com/dosorio/utilities/master/singleCell/scQC.R')
load('SRA745734_SRS3600975.sparse.RData')
dim(sm)
sm <- scQC(sm, mtThreshold = 1)
mtCounts <- colSums(sm[grep('^MT-',toupper(rownames(sm))),])
mtCounts <- mtCounts/colSums(sm)
plot(mtCounts)
plot(colSums(sm),mtCounts)
plot(colSums(sm),colSums(sm!=0))
sm <- CreateSeuratObject(sm)
sm <- NormalizeData(sm)
sm <- ScaleData(sm)
sm <- FindVariableFeatures(sm)
sm <- RunPCA(sm)
sm <- RunTSNE(sm)
sm <- RunUMAP(sm, dims = 1:25)
UMAPPlot(sm)
sm$MT <- mtCounts
FeaturePlot(sm, features = 'MT', order = TRUE)
sm <- FindNeighbors(sm)
sm <- FindClusters(sm, resolution = 0.1)
UMAPPlot(sm)
sm <- RunUMAP(sm, dims = 1:50)
UMAPPlot(sm)
sm$MT <- mtCounts
FeaturePlot(sm, features = 'MT', order = TRUE)
sm <- FindNeighbors(sm)
sm <- FindClusters(sm, resolution = 0.1)
UMAPPlot(sm)
DE <- FindMarkers(sm, ident.1 = '1', ident.2 = '0', logfc.threshold = 0, test.use = 'MAST')
FC <- DE$avg_logFC
names(FC) <-  toupper(unlist(lapply(strsplit(rownames(DE), '-ENSM'), function(X){X[1]})))
DE$gene <- names(FC)
pA <- pbapply::pbsapply(1:10, function(seed){
set.seed(seed)
E1 <- fgseaMultilevel(KEGG, FC)
E1$padj[E1$pathway == 'Apoptosis']
})
pA
min(pA)
E1 <- fgseaMultilevel(KEGG, FC)
View(E1)
#E1 <- fgseaMultilevel(KEGG, FC)
E1 <- fgsea(KEGG, FC,1000)
View(E1)
#E1 <- fgseaMultilevel(KEGG, FC)
E1 <- fgsea(KEGG, FC,2000)
View(E1)
E1$padj[E1$pathway == 'Apoptosis']
#E1 <- fgseaMultilevel(KEGG, FC)
E1 <- fgsea(KEGG, FC,5000)
E1$padj[E1$pathway == 'Apoptosis']
#E1 <- fgseaMultilevel(KEGG, FC)
E1 <- fgsea(KEGG, FC,10000)
E1$padj[E1$pathway == 'Apoptosis']
#E1 <- fgseaMultilevel(KEGG, FC)
E1 <- fgsea(KEGG, FC,1e5)
E1$padj[E1$pathway == 'Apoptosis']
#E1 <- fgseaMultilevel(KEGG, FC)
E1 <- fgsea(KEGG, FC,1e6)
E1$padj[E1$pathway == 'Apoptosis']
FC * -log10(DE$p_val)
FC * -log10(DE$p_val_adj)
FC <- FC * -log10(DE$p_val_adj)
DE$gene <- names(FC)
complete.cases(FC)
FC[complete.cases(FC)]
FC <- FC[complete.cases(FC)]
#E1 <- fgseaMultilevel(KEGG, FC)
E1 <- fgsea(KEGG, FC,1e3)
E1$padj[E1$pathway == 'Apoptosis']
#E1 <- fgseaMultilevel(KEGG, FC)
E1 <- fgsea(KEGG, FC,1e4)
FC <- FC[is.finite(FC)]
#E1 <- fgseaMultilevel(KEGG, FC)
E1 <- fgsea(KEGG, FC,1e3)
E1$padj[E1$pathway == 'Apoptosis']
plot(KEGG$Apoptosis, FC)
plotEnrichment(KEGG$Apoptosis, FC)
View(E1)
#E1 <- fgseaMultilevel(KEGG, FC)
E1 <- fgseaMultilevel(KEGG, FC)
E1$padj[E1$pathway == 'Apoptosis']
plotEnrichment(KEGG$Apoptosis, FC)
plot(DE$avg_logFC, -log10(DE$p_val))
FC <- DE$avg_logFC
names(FC) <-  toupper(unlist(lapply(strsplit(rownames(DE), '-ENSM'), function(X){X[1]})))
DE$gene <- names(FC)
FC <- FC[is.finite(FC)]
#E1 <- fgseaMultilevel(KEGG, FC)
E1 <- fgseaMultilevel(KEGG, FC)
E1$padj[E1$pathway == 'Apoptosis']
plotEnrichment(KEGG$Apoptosis, FC)
FC <- DE$avg_logFC
names(FC) <-  toupper(unlist(lapply(strsplit(rownames(DE), '-ENSM'), function(X){X[1]})))
DE$gene <- names(FC)
#E1 <- fgseaMultilevel(KEGG, FC)
E1 <- fgseaMultilevel(KEGG, FC)
E1$padj[E1$pathway == 'Apoptosis']
#E1 <- fgseaMultilevel(KEGG, FC)
E1 <- fgseaMultilevel(KEGG, FC)
E1$padj[E1$pathway == 'Apoptosis']
#E1 <- fgseaMultilevel(KEGG, FC)
E1 <- fgseaMultilevel(KEGG, FC)
E1$padj[E1$pathway == 'Apoptosis']
UMAPPlot(sm)
sm <- RunUMAP(sm, dims = 1:10)
UMAPPlot(sm)
sm$MT <- mtCounts
FeaturePlot(sm, features = 'MT', order = TRUE)
sm <- FindNeighbors(sm)
sm <- FindClusters(sm, resolution = 0.1)
UMAPPlot(sm)
DE <- FindMarkers(sm, ident.1 = '1', ident.2 = '0', logfc.threshold = 0, test.use = 'MAST')
FC <- DE$avg_logFC
#E1 <- fgseaMultilevel(KEGG, FC)
E1 <- fgseaMultilevel(KEGG, FC)
names(FC) <-  toupper(unlist(lapply(strsplit(rownames(DE), '-ENSM'), function(X){X[1]})))
DE$gene <- names(FC)
FC <- DE$avg_logFC
names(FC) <-  toupper(unlist(lapply(strsplit(rownames(DE), '-ENSM'), function(X){X[1]})))
DE$gene <- names(FC)
#E1 <- fgseaMultilevel(KEGG, FC)
E1 <- fgseaMultilevel(KEGG, FC)
E1$padj[E1$pathway == 'Apoptosis']
sm <- RunUMAP(sm, dims = 1:50)
UMAPPlot(sm)
sm$MT <- mtCounts
FeaturePlot(sm, features = 'MT', order = TRUE)
sm <- FindNeighbors(sm, reduction = 'umap')
sm <- FindNeighbors(sm, reduction = 'umap', dims = 1:2)
sm <- FindClusters(sm, resolution = 0.1)
UMAPPlot(sm)
sm <- FindClusters(sm, resolution = 0.05)
UMAPPlot(sm)
DE <- FindMarkers(sm, ident.1 = '1', ident.2 = '0', logfc.threshold = 0, test.use = 'MAST')
FC <- DE$avg_logFC
names(FC) <-  toupper(unlist(lapply(strsplit(rownames(DE), '-ENSM'), function(X){X[1]})))
DE$gene <- names(FC)
#E1 <- fgseaMultilevel(KEGG, FC)
E1 <- fgseaMultilevel(KEGG, FC)
E1$padj[E1$pathway == 'Apoptosis']
#E1 <- fgseaMultilevel(KEGG, FC)
E1 <- fgseaMultilevel(KEGG, FC)
E1$padj[E1$pathway == 'Apoptosis']
#E1 <- fgseaMultilevel(KEGG, FC)
set.seed(1)
E1 <- fgseaMultilevel(KEGG, FC)
E1$padj[E1$pathway == 'Apoptosis']
sm <- RunTSNE(sm)
TSNEPlot(sm)
set.seed(1)
sm <- RunUMAP(sm, dims = 1:50)
UMAPPlot(sm)
sm$MT <- mtCounts
FeaturePlot(sm, features = 'MT', order = TRUE)
sm <- FindNeighbors(sm, reduction = 'umap', dims = 1:2)
set.seed(1)
sm <- FindNeighbors(sm, reduction = 'umap', dims = 1:2)
set.seed(1)
sm <- FindClusters(sm, resolution = 0.05)
UMAPPlot(sm)
set.seed(1)
sm <- FindNeighbors(sm)
set.seed(1)
sm <- FindClusters(sm, resolution = 0.05)
UMAPPlot(sm)
set.seed(1)
sm <- FindClusters(sm, resolution = 0.2)
UMAPPlot(sm)
DE <- FindMarkers(sm, ident.1 = '1', ident.2 = '0', logfc.threshold = 0, test.use = 'MAST')
FC <- DE$avg_logFC
names(FC) <-  toupper(unlist(lapply(strsplit(rownames(DE), '-ENSM'), function(X){X[1]})))
DE$gene <- names(FC)
#E1 <- fgseaMultilevel(KEGG, FC)
set.seed(1)
E1 <- fgseaMultilevel(KEGG, FC)
E1$padj[E1$pathway == 'Apoptosis']
#E1 <- fgseaMultilevel(KEGG, FC)
set.seed(1)
E1 <- fgseaMultilevel(KEGG, FC)
E1$padj[E1$pathway == 'Apoptosis']
library(Seurat)
library(fgsea)
KEGG <- gmtPathways('https://amp.pharm.mssm.edu/Enrichr/geneSetLibrary?mode=text&libraryName=KEGG_2019_Mouse')
REACTOME <- gmtPathways('https://amp.pharm.mssm.edu/Enrichr/geneSetLibrary?mode=text&libraryName=Reactome_2016')
BIOP <- gmtPathways('https://amp.pharm.mssm.edu/Enrichr/geneSetLibrary?mode=text&libraryName=BioPlanet_2019')
source('https://raw.githubusercontent.com/dosorio/utilities/master/singleCell/scQC.R')
load('SRA745734_SRS3600975.sparse.RData')
dim(sm)
sm <- scQC(sm, mtThreshold = 1)
mtCounts <- colSums(sm[grep('^MT-',toupper(rownames(sm))),])
mtCounts <- mtCounts/colSums(sm)
plot(mtCounts)
plot(colSums(sm),mtCounts)
plot(colSums(sm),colSums(sm!=0))
sm <- CreateSeuratObject(sm)
sm <- NormalizeData(sm)
sm <- ScaleData(sm)
sm <- FindVariableFeatures(sm)
sm <- RunPCA(sm)
set.seed(1)
sm <- RunUMAP(sm, dims = 1:50)
UMAPPlot(sm)
sm$MT <- mtCounts
FeaturePlot(sm, features = 'MT', order = TRUE)
set.seed(1)
sm <- FindNeighbors(sm)
set.seed(1)
sm <- FindClusters(sm, resolution = 0.2)
UMAPPlot(sm)
DE <- FindMarkers(sm, ident.1 = '1', ident.2 = '0', logfc.threshold = 0, test.use = 'MAST')
FC <- DE$avg_logFC
names(FC) <-  toupper(unlist(lapply(strsplit(rownames(DE), '-ENSM'), function(X){X[1]})))
DE$gene <- names(FC)
#E1 <- fgseaMultilevel(KEGG, FC)
set.seed(1)
E1 <- fgseaMultilevel(KEGG, FC)
E1$padj[E1$pathway == 'Apoptosis']
#E1 <- fgseaMultilevel(KEGG, FC)
set.seed(2)
E1 <- fgseaMultilevel(KEGG, FC)
E1$padj[E1$pathway == 'Apoptosis']
library(Seurat)
library(fgsea)
KEGG <- gmtPathways('https://amp.pharm.mssm.edu/Enrichr/geneSetLibrary?mode=text&libraryName=KEGG_2019_Mouse')
REACTOME <- gmtPathways('https://amp.pharm.mssm.edu/Enrichr/geneSetLibrary?mode=text&libraryName=Reactome_2016')
BIOP <- gmtPathways('https://amp.pharm.mssm.edu/Enrichr/geneSetLibrary?mode=text&libraryName=BioPlanet_2019')
source('https://raw.githubusercontent.com/dosorio/utilities/master/singleCell/scQC.R')
load('SRA745734_SRS3600975.sparse.RData')
dim(sm)
sm <- scQC(sm, mtThreshold = 1)
mtCounts <- colSums(sm[grep('^MT-',toupper(rownames(sm))),])
mtCounts <- mtCounts/colSums(sm)
plot(mtCounts)
plot(colSums(sm),mtCounts)
plot(colSums(sm),colSums(sm!=0))
sm <- CreateSeuratObject(sm)
sm <- NormalizeData(sm)
sm <- ScaleData(sm)
sm <- FindVariableFeatures(sm)
sm <- RunPCA(sm)
set.seed(2)
sm <- RunUMAP(sm, dims = 1:50)
UMAPPlot(sm)
sm$MT <- mtCounts
FeaturePlot(sm, features = 'MT', order = TRUE)
set.seed(2)
sm <- FindNeighbors(sm)
set.seed(2)
sm <- FindClusters(sm, resolution = 0.2)
UMAPPlot(sm)
DE <- FindMarkers(sm, ident.1 = '1', ident.2 = '0', logfc.threshold = 0, test.use = 'MAST')
FC <- DE$avg_logFC
names(FC) <-  toupper(unlist(lapply(strsplit(rownames(DE), '-ENSM'), function(X){X[1]})))
DE$gene <- names(FC)
#E1 <- fgseaMultilevel(KEGG, FC)
set.seed(2)
E1 <- fgseaMultilevel(KEGG, FC)
E1$padj[E1$pathway == 'Apoptosis']
plotEnrichment(KEGG$Apoptosis, FC)
plot(DE$avg_logFC, -log10(DE$p_val))
library(Seurat)
library(fgsea)
KEGG <- gmtPathways('https://amp.pharm.mssm.edu/Enrichr/geneSetLibrary?mode=text&libraryName=KEGG_2019_Mouse')
REACTOME <- gmtPathways('https://amp.pharm.mssm.edu/Enrichr/geneSetLibrary?mode=text&libraryName=Reactome_2016')
BIOP <- gmtPathways('https://amp.pharm.mssm.edu/Enrichr/geneSetLibrary?mode=text&libraryName=BioPlanet_2019')
source('https://raw.githubusercontent.com/dosorio/utilities/master/singleCell/scQC.R')
load('SRA745734_SRS3600975.sparse.RData')
dim(sm)
sm <- scQC(sm, mtThreshold = 1)
mtCounts <- colSums(sm[grep('^MT-',toupper(rownames(sm))),])
mtCounts <- mtCounts/colSums(sm)
plot(mtCounts)
plot(colSums(sm),mtCounts)
plot(colSums(sm),colSums(sm!=0))
sm <- CreateSeuratObject(sm)
sm <- NormalizeData(sm)
sm <- ScaleData(sm)
sm <- FindVariableFeatures(sm)
sm <- RunPCA(sm)
set.seed(2)
sm <- RunUMAP(sm, dims = 1:50)
UMAPPlot(sm)
sm$MT <- mtCounts
FeaturePlot(sm, features = 'MT', order = TRUE)
set.seed(2)
sm <- FindNeighbors(sm)
set.seed(2)
sm <- FindClusters(sm, resolution = 0.2)
UMAPPlot(sm)
DE <- FindMarkers(sm, ident.1 = '1', ident.2 = '0', logfc.threshold = 0, test.use = 'MAST')
FC <- DE$avg_logFC
names(FC) <-  toupper(unlist(lapply(strsplit(rownames(DE), '-ENSM'), function(X){X[1]})))
DE$gene <- names(FC)
#E1 <- fgseaMultilevel(KEGG, FC)
set.seed(2)
E1 <- fgseaMultilevel(KEGG, FC)
E1$padj[E1$pathway == 'Apoptosis']
plotEnrichment(KEGG$Apoptosis, FC)
plot(DE$avg_logFC, -log10(DE$p_val))
View(E1)
E1$padj < 0.05
E1[E1$padj < 0.05,]
E1 <- E1[E1$padj < 0.05,]
View(E1)
E1 <- E1[E1$padj < 0.05 & E1$NES > 0,]
View(E1)
plotEnrichment(KEGG$Apoptosis, FC)
A <- plotEnrichment(KEGG$Apoptosis, FC)
B <- UMAPPlot(sm)
library(patchwork)
A | B
B <- FeaturePlot(sm, features = 'MT', order = TRUE)
C <- UMAPPlot(sm)
B | C | A
plot(DE$avg_logFC, -log10(DE$p_val))
E1 <- fgseaMultilevel(KEGG, -1*FC)
plotEnrichment(KEGG$Apoptosis, FC)
E1 <- fgseaMultilevel(KEGG, FC)
E1$padj[E1$pathway == 'Apoptosis']
E1 <- E1[E1$padj < 0.05 & E1$NES > 0,]
A <- plotEnrichment(KEGG$Apoptosis, FC)
View(E1)
E1 <- fgseaMultilevel(KEGG, FC)
E1$padj[E1$pathway == 'Apoptosis']
E1 <- E1[E1$padj < 0.05 & E1$NES > 0,]
View(E1)
B | C | A
library(ggplot2)
library(statsExpressions)
library(patchwork)
library(circlize)
library(ComplexHeatmap)
library(pbapply)
library(ggrepel)
setwd("~/scTenifoldKnk/inst/benchmark")
col_fun = colorRamp2(c(-1, 0, 1), c("blue", "white", "red"))
SERGIO <- read.csv('SERGIO/simulationOutput.csv', header = FALSE)
rownames(SERGIO) <- paste0('G', seq_len(nrow(SERGIO)))
colnames(SERGIO) <- paste0('C', seq_len(ncol(SERGIO)))
corValues <- cor(t(SERGIO), method = 'sp')
diag(corValues) <- 0
corValues <- corValues/max(abs(corValues))
diag(corValues) <- 1
cList <- c(rep('C1',5), rep('C2',10), rep('C3',25), rep('C4', 40), rep('C5',20))
rA <- rowAnnotation(length = anno_mark(at = c(5,15,40,80,100), labels = c(5,15,40,80,100),side = 'left'))
cLabels = HeatmapAnnotation(Cluster = cList,
col = list(Cluster = c("C1" = "#3B99B1", "C2" = "#6FB798", "C3" = "#C7C98A", "C4" = "#E8A419", "C5" = "#EA6400")),
annotation_name_side = 'right')
hMap <- Heatmap(corValues, row_order = 1:100, column_order = 1:100, show_row_names = FALSE, show_column_names = FALSE, name = 'SCC', top_annotation = cLabels, left_annotation = rA)
png('~/../Desktop/HM.png', width = 1400, height = 1000, res = 300)
draw(hMap, merge_legend = TRUE)
dev.off()
countMatrix <- SERGIO
set.seed(1)
X <- scTenifoldNet::makeNetworks(countMatrix, q = 0.9, nComp = 5)
set.seed(1)
X <- scTenifoldNet::tensorDecomposition(X)
X <- X$X
X <- (X + t(X))/2
image(as.matrix(X))
R <- sapply(seq_len(100), function(G){
Y <- X
Y[G,] <- 0
set.seed(1)
MA <- scTenifoldNet::manifoldAlignment(X,Y,2)
DR <- scTenifoldNet::dRegulation(MA)
DR <- DR[paste0(1:100),]
DR$Z
})
X <- SERGIO
Y <- X
Y[15,] <- 0
X <- as.matrix(X)
Y <- as.matrix(Y)
set.seed(1)
X <- scTenifoldNet::makeNetworks(X, nComp = 5, q = 0.9, nNet = 20)
set.seed(1)
Y <- scTenifoldNet::makeNetworks(Y, nComp = 5, q = 0.9, nNet = 20)
set.seed(1)
TD <- scTenifoldNet::tensorDecomposition(X,Y)
set.seed(1)
MA <- scTenifoldNet::manifoldAlignment(TD$X,TD$Y)
DR <- scTenifoldNet::dRegulation(MA)
DR <- DR[paste0(1:100),]
R <- as.data.frame(R)
#R[,101] <- DR$Z
R <- as.matrix(R)
set.seed(1)
UMAP <- as.data.frame(uwot::umap(t(R)))
colnames(UMAP) <- paste0('UMAP',1:2)
#UMAP$ID <- c(paste0('g',1:100))#, 'g15KO')
UMAP$CLUSTER <- c(rep('C1',5), rep('C2',10), rep('C3',25), rep('C4',40), rep('C5',20))
png('~/../Desktop/Map1.png', width = 1000, height = 1000, res = 300)
ggplot(UMAP, aes(UMAP1,UMAP2, colour=CLUSTER)) +
geom_point(cex=0.7) +
theme_bw() +
scale_color_manual(values=c("C1" = "#3B99B1", "C2" = "#6FB798", "C3" = "#C7C98A", "C4" = "#E8A419", "C5" = "#EA6400")) +
theme(legend.position = "none") + labs(title = 'Perturbations Map', subtitle = 'scTenifoldKnk') +
theme(plot.title = element_text(face = 'bold')) + xlab('UMAP 1') + ylab('UMAP 2')
dev.off()
R <- as.data.frame(R)
R[,101] <- DR$Z
R <- as.matrix(R)
set.seed(1)
UMAP <- as.data.frame(uwot::umap(t(R)))
colnames(UMAP) <- paste0('UMAP',1:2)
UMAP$ID[c(15,101)] <- c('g15[Known]','g15[Traced]')
UMAP$CLUSTER <- c(rep('C1',5), rep('C2',10), rep('C3',25), rep('C4',40), rep('C5',20), rep('T',1))
png('~/../Desktop/Map2.png', width = 1000, height = 1000, res = 300)
ggplot(UMAP, aes(UMAP1,UMAP2,label=ID, colour=CLUSTER)) + geom_point(cex=0.7) + geom_label_repel() + theme_bw() +
scale_color_manual(values=c("C1" = "#3B99B1", "C2" = "#6FB798", "C3" = "#C7C98A", "C4" = "#E8A419", "C5" = "#EA6400", 'T' = '#F5191C')) +
theme(legend.position = "none") + labs(title = 'Perturbation Tracing', subtitle = 'scTenifoldKnk + scTenifoldNet') +
theme(plot.title = element_text(face = 'bold')) + xlab('UMAP 1') + ylab('UMAP 2')
dev.off()
